---
name: lb
description: |
  A TCP-level load balancer, for highly-available cluster topologies.
  This bit of infrastructure fronts the Kubernetes API server (provided
  by the `control' job), providing a single network address for IaaS
  providers who lack automatic load balancing.

packages:
  - haproxy
  - keepalived

consumes:
  - name: api
    type: k8s-apiserver

templates:
  bin/haproxy:      bin/haproxy
  etc/haproxy.conf: etc/haproxy.conf

  bin/keepalived:      bin/keepalived
  etc/keepalived.conf: etc/keepalived.conf

properties:
  debug:
    default:     false
    description: Enables verbose debugging, suitable for troubleshooting.

  port:
    default: 443
    description: |
      The TCP port on which to bind the front-end listener for the load balancer.

  vrrp.ip:
    description: |
      An IPv4 address (and netmask!) to manage among multiple instances of this job, as
      a single composite "router", using the Virtual Router Redundancy Protocol (VRRP).
      This address should be unattached to any other network point of presence.

      Notably, it must not be the primary IP of any member of the load balancer cluster.

      If this property is not set, VRRP will not be enabled.

  vrrp.id:
    default: auto
    description: |
      A unique (among other VRRP router sets) ID that identifies this router set in
      the local LAN segment.  VRRP IDs are numeric.  If set to the string "auto"
      (the default), BOSH will use a pre-configured default ID based on the value of
      the `autoconfigure` property (2 for "static", 3 for "etcd", and 4 for "api").

      This field is ignored if `vrrp.ip` is not set.

  haproxy.maxconn:
    default: 4096
    description: |
      The maximum number of concurrent client connections allowed by haproxy, on a
      per-process basis.  The load balancer will stop accepting new connections once
      this limit has been reached, until other clients disconnect.

  haproxy.timeout.connect:
    default: 500ms
    description: |
      Maximum amount of time to wait for a half-opened connection to the load balancer
      to finish connecting.

      Valid suffixes are "s" (seconds), "ms" (milliseconds), and "us" (microseconds).
      Without a suffix, "ms" is assumed.

  haproxy.timeout.queue:
    default: 2s
    description: |
      How long will incoming client connections queue in the "accept" phase of the
      TCP handshake, awaiting a slot in the connection table to free up.

      Valid suffixes are "s" (seconds), "ms" (milliseconds), and "us" (microseconds).
      Without a suffix, "ms" is assumed.

  haproxy.timeout.client:
    default: 30s
    description: |
      Maximum amount of time a client can remain inactive (without sending any data)
      before the load balancer disconnects it.

      Valid suffixes are "s" (seconds), "ms" (milliseconds), and "us" (microseconds).
      Without a suffix, "ms" is assumed.

# vim:ft=yaml
